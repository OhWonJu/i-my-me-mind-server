generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id @default(uuid())
  name  String?
  email String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts      Account[]
  workflows     Workflow[]
  collaborators Collaborator[]
}

model Account {
  id                String  @id @default(uuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Workflow {
  id      String  @id @default(uuid())
  name    String
  data    String? @db.Text
  publish Boolean @default(false)

  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id])

  collaborator Collaborator[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([ownerId])
}

enum CollaboratorRole {
  ADMIN
  MODERATOR
  GUEST
}

model Collaborator {
  id   String           @id @default(uuid())
  role CollaboratorRole @default(GUEST)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  workflowId String
  workflow   Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([workflowId])
}
